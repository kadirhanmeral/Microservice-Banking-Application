server:
  port: 8084

spring:
  application:
    name: payment-service

  datasource:
    url: jdbc:mysql://mysql-payment-db:3306/payment-db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    username: payment
    password: payment
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect

  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: payment-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.bank.payment.*"

account:
  service:
    url: http://localhost:8081
    mock:
      enabled: true

user:
  service:
    url: http://localhost:8082

loans:
  service:
    url: http://localhost:8083

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true
  info:
    env:
      enabled: true


logging:
  level:
    com:
      bank:
        payment: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka


